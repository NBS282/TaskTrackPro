@page "/users/changeCurrentPassword"
@using Controllers
@using Service.Models
@inject NavigationManager Navigation
@inject AdminSystemController _AdminSystemController
@inject UserController _UserController
@rendermode InteractiveServer

<link href="styles/styleChangePassword.css" rel="stylesheet"/>

<div class="change-password-container">
    <h3>Change Your Password</h3>
    <div class="form-group">
        <label for="userSelect">User</label>
        <select id="userSelect" class="form-control mt-1" @bind="selectedUserEmail">
            <option disabled value="@currentUser.Email">@currentUser.FirstName @currentUser.LastName</option>
        </select>
    </div>

    @if (!string.IsNullOrEmpty(selectedUserEmail))
    {
        <div class="form-group mt-3">
            <label for="oldPassword">Old Password</label>
            <div class="input-password-wrapper">
                <InputText id="oldPassword"
                           type="@oldPasswordInputType"
                           class="form-control mt-1"
                           @bind-Value="oldPassword" required/>
                <button type="button" @onclick="ToggleOldPasswordVisibility" class="btn-eye">
                    <i class="@oldPasswordEyeIcon"></i>
                </button>
            </div>
        </div>

        <div class="form-group mt-3">
            <label for="newPassword">New Password</label>
            <div class="input-password-wrapper">
                <InputText id="newPassword"
                           type="@newPasswordInputType"
                           class="form-control mt-1"
                           @bind-Value="newPassword" required/>
                <button type="button" @onclick="ToggleNewPasswordVisibility" class="btn-eye">
                    <i class="@newPasswordEyeIcon"></i>
                </button>
            </div>
        </div>

        <div class="form-group mt-3 d-flex gap-2">
            <button type="button" class="btn btn-primary"
                    @onclick="ChangePasswordPage"
                    disabled="@(!IsPasswordValid)">
                Change Password
            </button>
        </div>
    }

    @if (!string.IsNullOrEmpty(changeError))
    {
        <div class="alert alert-danger mt-3">
            <strong>Error: </strong>@changeError
            <button type="button" class="close" @onclick="ToggleAlertVisibility">
                <i class="fas fa-times"></i>
            </button>
        </div>
    }

    @if (!string.IsNullOrEmpty(changeSuccess))
    {
        <div class="alert alert-success mt-3">
            <strong>Success: </strong>@changeSuccess
            <button type="button" class="close" @onclick="ToggleAlertVisibility">
                <i class="fas fa-times"></i>
            </button>
        </div>
    }
</div>

@code {
    private string oldPassword = "";
    private string newPassword = "";
    private string changeError = "";
    private string changeSuccess = "";
    private readonly UserDTO currentUser = LoggedUser.Current;
    private string selectedUserEmail = LoggedUser.Current.Email;
    private string oldPasswordInputType = "password";
    private string newPasswordInputType = "password";
    private string oldPasswordEyeIcon = "fas fa-eye-slash";
    private string newPasswordEyeIcon = "fas fa-eye-slash";

    private bool IsPasswordValid =>
        !string.IsNullOrEmpty(oldPassword) &&
        !string.IsNullOrEmpty(newPassword) &&
        newPassword != oldPassword;

    private void ToggleOldPasswordVisibility()
    {
        oldPasswordInputType = oldPasswordInputType == "password" ? "text" : "password";
        oldPasswordEyeIcon = oldPasswordInputType == "text" ? "fas fa-eye" : "fas fa-eye-slash";
    }

    private void ToggleNewPasswordVisibility()
    {
        newPasswordInputType = newPasswordInputType == "password" ? "text" : "password";
        newPasswordEyeIcon = newPasswordInputType == "text" ? "fas fa-eye" : "fas fa-eye-slash";
    }

    private void ChangePasswordPage()
    {
        changeError = "";
        changeSuccess = "";

        var user = _UserController.GetUser(selectedUserEmail);

        try
        {
            _AdminSystemController.ChangeCurrentUserPassword(selectedUserEmail, oldPassword, newPassword);
            changeSuccess = $"Password for {user.FirstName} {user.LastName} has been successfully changed.";

            oldPassword = "";
            newPassword = "";
        }
        catch (Exception ex)
        {
            changeError = $"An error occurred: {ex.Message}";
        }
    }


    private void ToggleAlertVisibility()
    {
        changeError = "";
        changeSuccess = "";
    }

}
